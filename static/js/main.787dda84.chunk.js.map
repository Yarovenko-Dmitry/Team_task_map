{"version":3,"sources":["api/api.ts","hendlers/apiHendler.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["instance","axios","create","baseURL","mainRequest","geocode","get","defaults","params","interceptors","request","use","config","a","apikey","format","error","Promise","reject","App","useState","schoolName","setSchoolName","schoolDescription","setSchoolDescription","newSchoolLatitude","setNewSchoolLatitude","newSchoolLongitude","setNewSchoolLongitude","id","itMinskSchools","setItMinskSchools","locationSearchObject","setLocationSearchObject","searchObjectLatitude","setSearchObjectLatitude","searchObjectLongitude","setSearchObjectLongitude","addNewItSchoolMinsk","newItSchoolMinsk","v1","className","type","name","value","onChange","e","currentTarget","length","console","log","placeholder","onClick","location","then","res","data","response","GeoObjectCollection","featureMember","GeoObject","Point","pos","split","reverse","catch","err","coordinates","Number","state","center","zoom","options","position","right","top","left","map","itMinskSchool","geometry","modules","properties","hintContent","balloonContent","iconLayout","iconImageHref","iconImageSize","iconImageOffset","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.787dda84.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  // withCredentials: true,\r\n  baseURL: 'https://geocode-maps.yandex.ru/1.x/',\r\n});\r\n\r\nexport const mainRequest = {\r\n  getObjectCoordinates(geocode: string) {\r\n    return instance.get(`?geocode=${geocode}`);\r\n  }}\r\n\r\naxios.defaults.params = {};\r\nexport const setMobileInterceptors = (instance: any) => {\r\n  instance.interceptors.request.use(\r\n    async (config: any) => {\r\n      const apiKey = '62863b39-ff46-4e0f-a09b-34ed4079f28a'\r\n      const format = 'json'\r\n        config.params = {...config.params, apikey: apiKey, format: format}\r\n      return config;\r\n    },\r\n    (error: any) => Promise.reject(error)\r\n  );\r\n}\r\n\r\nsetMobileInterceptors(instance)","import {mainRequest} from '../api/api';\r\n\r\n\r\nexport const onClickSearchObjectsHandler = (location: string) => {\r\n  return mainRequest.getObjectCoordinates(location)\r\n    .then(res=>{\r\n      let pos = res.data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos\r\n       let coordinats = pos.split(' ').reverse()\r\n  return coordinats\r\n    }\r\n      ).catch(err => {\r\n\r\n  })\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport './App.css';\r\nimport {Map, RulerControl, TypeSelector, YMaps, ZoomControl, Placemark} from 'react-yandex-maps';\r\nimport {onClickSearchObjectsHandler} from './hendlers/apiHendler';\r\nimport {v1} from \"uuid\";\r\n\r\ntype ItMinskSchoolType = {\r\n  schoolDescription: string,\r\n  id: string,\r\n  schoolName: string,\r\n  newSchoolLatitude: any,\r\n  newSchoolLongitude: any\r\n}\r\n\r\nfunction App() {\r\n\r\n  const TESTitMinskSchools = [\r\n    {\r\n      id: \"d2c832a0-28d6-11eb-a6bf-0d5927730644\",\r\n      newSchoolLatitude: 50.4292,\r\n      newSchoolLongitude: 30.4931,\r\n      schoolDescription: \"тест 1\",\r\n      schoolName: \"1\"\r\n    },\r\n    {\r\n      id: \"d2c832a0-28d6-11eb-a6bf-0d5927730645\",\r\n      newSchoolLatitude: 50.4590,\r\n      newSchoolLongitude: 30.5391,\r\n      schoolDescription: \"тест 2\",\r\n      schoolName: \"2\"\r\n    },\r\n    {\r\n      id: \"d2c832a0-28d6-11eb-a6bf-0d5927730646\",\r\n      newSchoolLatitude: 50.4149,\r\n      newSchoolLongitude: 30.6057,\r\n      schoolDescription: \"тест 3\",\r\n      schoolName: \"3\"\r\n    }\r\n  ]\r\n\r\n  const [schoolName, setSchoolName] = useState<string>('');\r\n  const [schoolDescription, setSchoolDescription] = useState<string>('');\r\n  const [newSchoolLatitude, setNewSchoolLatitude] = useState<any>(0);\r\n  const [newSchoolLongitude, setNewSchoolLongitude] = useState<any>(0);\r\n  const [itMinskSchools, setItMinskSchools] = useState<Array<ItMinskSchoolType>>(TESTitMinskSchools);\r\n\r\n  const [locationSearchObject, setLocationSearchObject] = useState<string>('');\r\n  const [searchObjectLatitude, setSearchObjectLatitude] = useState<number>(50.5000);\r\n  const [searchObjectLongitude, setSearchObjectLongitude] = useState<number>(30.5000);\r\n\r\n\r\n  const onChangeSchoolNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSchoolName(e.currentTarget.value);\r\n  }\r\n\r\n  const onChangeDescriptionHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.value.length > 20) {\r\n      console.log('Value is more')\r\n    }\r\n    setSchoolDescription(e.currentTarget.value)\r\n  }\r\n\r\n  const onChangeNewSchoolLatitudeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewSchoolLatitude(e.currentTarget.value)\r\n  }\r\n\r\n  const onChangeNewSchoolLongitudeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewSchoolLongitude(e.currentTarget.value)\r\n  }\r\n\r\n  const onClickAddSchoolButtonHandler = () => {\r\n    addNewItSchoolMinsk(schoolDescription, schoolName)\r\n    console.log(itMinskSchools)\r\n  }\r\n\r\n  const addNewItSchoolMinsk = (schoolDescription: string, schoolName: string) => {\r\n    const newItSchoolMinsk = {\r\n      id: v1(),\r\n      schoolName,\r\n      schoolDescription,\r\n      newSchoolLatitude,\r\n      newSchoolLongitude\r\n    };\r\n    setItMinskSchools([...itMinskSchools, newItSchoolMinsk]);\r\n  }\r\n\r\n  const onChangeLocationNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setLocationSearchObject(e.currentTarget.value);\r\n  }\r\n\r\n  const onClickSearchObjectsButtonHeddler = () => {\r\n    onClickSearchObjectsHandler(locationSearchObject).then((coordinates: Array<string>) => {\r\n      if (coordinates.length) {\r\n        setSearchObjectLatitude(Number(coordinates[0]));\r\n        setSearchObjectLongitude(+coordinates[1]);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={'searchAddNavigation'}>\r\n        {/* потом может зарефакторим в формик*/}\r\n        <div className={'addObject'}>\r\n          <div>добавить школу</div>\r\n          <div>\r\n            <div>название школы</div>\r\n            <input type={'text'} name={'schoolName'} value={schoolName}\r\n                   onChange={onChangeSchoolNameHandler}/>\r\n          </div>\r\n          <div>\r\n            <div>описание</div>\r\n            <input type='text' onChange={onChangeDescriptionHandler}/>\r\n          </div>\r\n          <div>\r\n            <div>координаты</div>\r\n            <input type={'text'} onChange={onChangeNewSchoolLatitudeHandler}/>\r\n            <input type={'text'} onChange={onChangeNewSchoolLongitudeHandler}/>\r\n          </div>\r\n          {/*<input type={'button'} name={'selectCoordinate'} value={'Указать объект на карте'}/>*/}\r\n          <div>\r\n            {/* возможно добавить изображение с видом метки*/}\r\n            <input type={'button'} name={'changeMarkType'} value={'Сменить вид метки'}/>\r\n            <input type={'text'} name={'markType'} placeholder={'Mark type'}/>\r\n          </div>\r\n          <input type={'button'} name={'addNewItSchoolMinsk'} value={'Добавить на карту'}\r\n                 onClick={onClickAddSchoolButtonHandler}/>\r\n        </div>\r\n        <div className={'searchObject'}>\r\n          <div>Найти объекты</div>\r\n          <div>\r\n            <div>Местность</div>\r\n            <input type={'text'} name={'location'} placeholder={'Название региона'}\r\n                   onChange={onChangeLocationNameHandler}/>\r\n            <div>\r\n              <div>координаты</div>\r\n              <input type={'text'} name={'latitudeCoordinate'} placeholder={'Latitude'}/>\r\n              <input type={'text'} name={'longitudeCoordinate'} placeholder={'Longitude'}/>\r\n            </div>\r\n          </div>\r\n          <select>\r\n            <option>Школа для детей</option>\r\n            <option>Курсы для взрослых</option>\r\n            <option>IT ВУЗ</option>\r\n          </select>\r\n          <div>\r\n            <div>Количество объектов</div>\r\n            <input type={'number'} name={'objectNumber'}/>\r\n          </div>\r\n          <input type={'button'} name={'searchObjects'} value={'Найти объекты'}\r\n                 onClick={onClickSearchObjectsButtonHeddler}/>\r\n        </div>\r\n      </div>\r\n      <div className={'mapArea'}>\r\n        <YMaps>\r\n          <div>\r\n            <Map className={'map'} state={{center: [searchObjectLatitude, searchObjectLongitude], zoom: 10}}>\r\n              <ZoomControl options={{position: {right: 10, top: 10}}}/>\r\n              <TypeSelector options={{position: {left: 10, top: 10}}}/>\r\n              <RulerControl options={{position: {right: 50, top: 10}}}/>\r\n\r\n              {itMinskSchools.map((itMinskSchool:ItMinskSchoolType) => <Placemark\r\n                  geometry={[itMinskSchool.newSchoolLatitude, itMinskSchool.newSchoolLongitude]}\r\n                  modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n                  properties={{\r\n                    hintContent: itMinskSchool.schoolName,\r\n                    balloonContent: itMinskSchool.schoolDescription,\r\n                  }}\r\n                  options={{\r\n                    iconLayout: 'default#image',\r\n                    iconImageHref: 'https://image.freepik.com/free-vector/3d-gps-red-color-icon-dropping-on-street-map-on-white_175838-446.jpg',\r\n                    iconImageSize: [80, 60],\r\n                    iconImageOffset: [0, 0],\r\n                  }}\r\n                />\r\n              )}\r\n            </Map>\r\n          </div>\r\n        </YMaps>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}