{"version":3,"sources":["api/api.ts","hendlers/apiHendler.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["instance","axios","create","baseURL","mainRequest","geocode","get","defaults","params","interceptors","request","use","config","a","apikey","format","error","Promise","reject","App","useState","schoolName","setSchoolName","schoolDescription","setSchoolDescription","newSchoolLatitude","setNewSchoolLatitude","newSchoolLongitude","setNewSchoolLongitude","itMinskSchools","setItMinskSchools","locationSearchObject","setLocationSearchObject","searchObjectLatitude","setSearchObjectLatitude","searchObjectLongitude","setSearchObjectLongitude","addNewItSchoolMinsk","newItSchoolMinsk","id","v1","className","type","name","value","placeholder","onChange","e","currentTarget","length","console","log","replace","onClick","location","then","res","data","response","GeoObjectCollection","featureMember","GeoObject","Point","pos","split","reverse","catch","err","coordinates","Number","min","max","coordinatesSchool","getMapCoordinates","state","center","zoom","options","position","right","top","left","map","itMinskSchool","geometry","modules","properties","hintContent","balloonContent","iconLayout","iconImageHref","iconImageSize","iconImageOffset","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e0b1a86.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  // withCredentials: true,\r\n  baseURL: 'https://geocode-maps.yandex.ru/1.x/',\r\n});\r\n\r\nexport const mainRequest = {\r\n  getObjectCoordinates(geocode: string) {\r\n    return instance.get(`?geocode=${geocode}`);\r\n  }}\r\n\r\naxios.defaults.params = {};\r\nexport const setMobileInterceptors = (instance: any) => {\r\n  instance.interceptors.request.use(\r\n    async (config: any) => {\r\n      const apiKey = '62863b39-ff46-4e0f-a09b-34ed4079f28a'\r\n      const format = 'json'\r\n        config.params = {...config.params, apikey: apiKey, format: format}\r\n      return config;\r\n    },\r\n    (error: any) => Promise.reject(error)\r\n  );\r\n}\r\n\r\nsetMobileInterceptors(instance)","import {mainRequest} from '../api/api';\r\n\r\n\r\nexport const onClickSearchObjectsHandler = (location: string) => {\r\n  return mainRequest.getObjectCoordinates(location)\r\n    .then(res=>{\r\n      let pos = res.data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos\r\n       let coordinats = pos.split(' ').reverse()\r\n  return coordinats\r\n    }\r\n      ).catch(err => {\r\n\r\n  })\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport './App.css';\r\nimport {Map, RulerControl, TypeSelector, YMaps, ZoomControl, Placemark} from 'react-yandex-maps';\r\nimport {onClickSearchObjectsHandler} from './hendlers/apiHendler';\r\nimport {v1} from 'uuid';\r\n\r\n\r\ntype ItMinskSchoolType = {\r\n  schoolDescription: string,\r\n  id: string,\r\n  schoolName: string,\r\n  newSchoolLatitude: any,\r\n  newSchoolLongitude: any\r\n}\r\n\r\nfunction App() {\r\n\r\n  const TESTitMinskSchools: Array<ItMinskSchoolType> = [];\r\n\r\n  const [schoolName, setSchoolName] = useState<string>('');\r\n  const [schoolDescription, setSchoolDescription] = useState<string>('');\r\n  const [newSchoolLatitude, setNewSchoolLatitude] = useState<any>(0);\r\n  const [newSchoolLongitude, setNewSchoolLongitude] = useState<any>(0);\r\n  const [itMinskSchools, setItMinskSchools] = useState<Array<ItMinskSchoolType>>(TESTitMinskSchools);\r\n\r\n  const [locationSearchObject, setLocationSearchObject] = useState<string>('');\r\n  const [searchObjectLatitude, setSearchObjectLatitude] = useState<number>(50.5000);\r\n  const [searchObjectLongitude, setSearchObjectLongitude] = useState<number>(30.5000);\r\n\r\n  const onChangeSchoolNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSchoolName(e.currentTarget.value);\r\n  }\r\n\r\n  const onChangeDescriptionHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.value.length > 20) {\r\n      console.log('Value is more')\r\n    }\r\n    setSchoolDescription(e.currentTarget.value)\r\n  }\r\n\r\n  const onChangeNewSchoolLatitudeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const reg = /[^\\d\\.]/g\r\n    setNewSchoolLatitude(e.currentTarget.value.replace(reg, ''))\r\n  }\r\n\r\n  const onChangeNewSchoolLongitudeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const reg = /[^\\d\\.]/g\r\n    setNewSchoolLongitude(e.currentTarget.value.replace(reg, ''))\r\n  }\r\n\r\n  const onClickAddSchoolButtonHandler = () => {\r\n    addNewItSchoolMinsk(schoolDescription, schoolName);\r\n    // console.log(itMinskSchools)\r\n    setSearchObjectLatitude(newSchoolLatitude);\r\n    setSearchObjectLongitude(newSchoolLongitude);\r\n  }\r\n\r\n  const addNewItSchoolMinsk = (schoolDescription: string, schoolName: string) => {\r\n    const newItSchoolMinsk = {\r\n      id: v1(),\r\n      schoolName,\r\n      schoolDescription,\r\n      newSchoolLatitude,\r\n      newSchoolLongitude\r\n    };\r\n    setItMinskSchools([...itMinskSchools, newItSchoolMinsk]);\r\n  }\r\n\r\n  const onChangeLocationNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setLocationSearchObject(e.currentTarget.value);\r\n  }\r\n\r\n  const onClickSearchObjectsButtonHeddler = () => {\r\n    onClickSearchObjectsHandler(locationSearchObject).then((coordinates: Array<string>) => {\r\n      if (coordinates.length) {\r\n        setSearchObjectLatitude(Number(coordinates[0]));\r\n        setSearchObjectLongitude(+coordinates[1]);\r\n      }\r\n    })\r\n  }\r\n\r\n  const getMapCoordinates = (e: any) => {\r\n    // console.log(e)\r\n    let coordinatesSchool = e.get('coords')\r\n    // console.log(coordinatesSchool)\r\n    setNewSchoolLatitude(+coordinatesSchool[0]);\r\n    setNewSchoolLongitude(+coordinatesSchool[1]);\r\n\r\n    // setSearchObjectLatitude(+coordinatesSchool[0]);\r\n    // setSearchObjectLongitude(+coordinatesSchool[1]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={'searchAddNavigation'}>\r\n        {/* потом может зарефакторим в формик*/}\r\n        <div className={'addObject'}>\r\n          <div>добавить школу</div>\r\n          <div>\r\n            {/*<div>название школы</div>*/}\r\n            <input type={'text'} name={'schoolName'} value={schoolName} placeholder={'Название школы'}\r\n                   onChange={onChangeSchoolNameHandler}/>\r\n          </div>\r\n          <div>\r\n            {/*<div>описание</div>*/}\r\n            <input type='text' placeholder={'Описание'} onChange={onChangeDescriptionHandler}/>\r\n          </div>\r\n          <div>\r\n            <div>координаты</div>\r\n            <input value={newSchoolLatitude} type={'text'} placeholder={'Широта'}\r\n                   onChange={onChangeNewSchoolLatitudeHandler}/>\r\n\r\n            <input value={newSchoolLongitude} type={'text'} placeholder={'Долгота'}\r\n                   onChange={onChangeNewSchoolLongitudeHandler}/>\r\n          </div>\r\n          {/*<input type={'button'} name={'selectCoordinate'} value={'Указать объект на карте'}/>*/}\r\n          {/*  <div>*/}\r\n          {/*  /!* возможно добавить изображение с видом метки*!/*/}\r\n          {/*  <input type={'button'} name={'changeMarkType'} value={'Сменить вид метки'}/>*/}\r\n          {/*  <input type={'text'} name={'markType'} placeholder={'Mark type'}/>*/}\r\n          {/*</div>*/}\r\n          <input type={'button'} name={'addNewItSchoolMinsk'} value={'Добавить на карту'}\r\n                 onClick={onClickAddSchoolButtonHandler}/>\r\n        </div>\r\n        <div className={'searchObject'}>\r\n          <div>Найти школы</div>\r\n          <div>\r\n            {/*<div>Местность</div>*/}\r\n            <input type={'text'} name={'location'} placeholder={'Название объекта'}\r\n                   onChange={onChangeLocationNameHandler}/>\r\n            <input type={'button'} name={'searchObjects'} value={'Найти объект'}\r\n                   onClick={onClickSearchObjectsButtonHeddler}/>\r\n            {/*<div>*/}\r\n            {/*  <div>координаты</div>*/}\r\n            {/*  <input type={'text'} name={'latitudeCoordinate'} placeholder={'Latitude'}/>*/}\r\n            {/*  <input type={'text'} name={'longitudeCoordinate'} placeholder={'Longitude'}/>*/}\r\n            {/*</div>*/}\r\n          </div>\r\n          {/*<select>*/}\r\n          {/*  <option>Школа для детей</option>*/}\r\n          {/*  <option>Курсы для взрослых</option>*/}\r\n          {/*  <option>IT ВУЗ</option>*/}\r\n          {/*</select>*/}\r\n          <div>\r\n            <div>Количество ближайших школ (1-5)</div>\r\n            <input type={'number'} name={'objectNumber'} min=\"1\" max=\"5\"/>\r\n          </div>\r\n          <input type={'button'} name={'showNearbySchools'} value={'Показать на карте'}/>\r\n        </div>\r\n      </div>\r\n      <div className={'mapArea'}>\r\n        <YMaps>\r\n          <div>\r\n            <Map className={'map'}\r\n                 onClick={(e: any) => {\r\n                   getMapCoordinates(e)\r\n                 }}\r\n                 state={{center: [searchObjectLatitude, searchObjectLongitude], zoom: 10}}>\r\n              <ZoomControl options={{position: {right: 10, top: 10}}}/>\r\n              <TypeSelector options={{position: {left: 10, top: 10}}}/>\r\n              <RulerControl options={{position: {right: 50, top: 10}}}/>\r\n\r\n              {itMinskSchools.map((itMinskSchool: ItMinskSchoolType) => <Placemark\r\n                  geometry={[itMinskSchool.newSchoolLatitude, itMinskSchool.newSchoolLongitude]}\r\n                  modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n                  properties={{\r\n                    hintContent: itMinskSchool.schoolName,\r\n                    balloonContent: itMinskSchool.schoolDescription,\r\n                  }}\r\n                  options={{\r\n                    iconLayout: 'default#image',\r\n                    iconImageHref: 'https://image.freepik.com/free-vector/3d-gps-red-color-icon-dropping-on-street-map-on-white_175838-446.jpg',\r\n                    iconImageSize: [80, 60],\r\n                    iconImageOffset: [-40, -30],\r\n                  }}\r\n                />\r\n              )}\r\n            </Map>\r\n          </div>\r\n        </YMaps>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import injectTapEventPlugin from 'react-tap-event-plugin';\r\n//import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\n//injectTapEventPlugin()\r\n\r\nReactDOM.render(\r\n   // <MuiThemeProvider>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n    //</MuiThemeProvider>\r\n        , document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}