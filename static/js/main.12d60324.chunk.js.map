{"version":3,"sources":["api/api.ts","hendlers/apiHendler.ts","assets/cut-map-marker-final.jpg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["instance","axios","create","baseURL","instanceSECONDtest_To_Get_Objects","mainRequest","geocode","get","objectType","location","streetName","objectCount","defaults","params","interceptors","request","use","config","a","apikey","format","error","Promise","reject","App","useState","schoolName","setSchoolName","schoolDescription","setSchoolDescription","newSchoolLatitude","setNewSchoolLatitude","newSchoolLongitude","setNewSchoolLongitude","itMinskSchools","setItMinskSchools","searchObjectLocation","setSearchObjectLocation","searchObjectType","setSearchObjectType","setStreetName","searchObjectCount","setSearchObjectCount","displaySearchObjects","setDisplaySearchObjects","searchObjectLatitude","setSearchObjectLatitude","searchObjectLongitude","setSearchObjectLongitude","addNewItSchoolMinsk","newItSchoolMinsk","id","v1","className","type","name","value","placeholder","onChange","e","currentTarget","length","console","log","replace","onClick","then","res","data","response","GeoObjectCollection","featureMember","GeoObject","Point","pos","split","reverse","catch","err","coordinates","Number","min","max","Math","round","features","onClickShowNearbyObjectsHeddler","foundObjects","shownObjects","Array","i","description","properties","geometry","phone","coordinatesSchool","getMapCoordinates","state","center","zoom","options","position","right","top","left","map","displaySearchObject","modules","hintContent","balloonContent","iconLayout","iconImageHref","pointer","iconImageSize","iconImageOffset","itMinskSchool","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12d60324.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  // withCredentials: true,\r\n  baseURL: 'https://geocode-maps.yandex.ru/1.x/',\r\n});\r\n\r\nconst instanceSECONDtest_To_Get_Objects = axios.create({\r\n  // withCredentials: true,\r\n  baseURL: 'https://search-maps.yandex.ru/v1/',\r\n});\r\n\r\nexport const mainRequest = {\r\n  getObjectCoordinates(geocode: string) {\r\n    return instance.get(`?geocode=${geocode}`);\r\n  },\r\n  getDesplayObjects(objectType: string, location: string, streetName: string, objectCount: number) {\r\n    return instanceSECONDtest_To_Get_Objects.get(`?text=${objectType}, ${location}, ${streetName} &type=biz&lang=ru_RU&results=${objectCount}`);\r\n  }\r\n}\r\n\r\naxios.defaults.params = {};\r\nexport const setMobileInterceptors = (instance: any) => {\r\n  instance.interceptors.request.use(\r\n    async (config: any) => {\r\n      const apiKey = '62863b39-ff46-4e0f-a09b-34ed4079f28a'\r\n      const format = 'json'\r\n      config.params = {...config.params, apikey: apiKey, format: format}\r\n      return config;\r\n    },\r\n    (error: any) => Promise.reject(error)\r\n  );\r\n}\r\n\r\nsetMobileInterceptors(instance)\r\n\r\nexport const setMobileInterceptorsSECONDtest_To_Get_Objects = (instanceSECONDtest_To_Get_Objects: any) => {\r\n  instanceSECONDtest_To_Get_Objects.interceptors.request.use(\r\n    async (config: any) => {\r\n      const apiKey = '568dafa6-e76b-459f-adab-c4761fc807ed'\r\n      config.params = {...config.params, apikey: apiKey}\r\n      return config;\r\n    },\r\n    (error: any) => Promise.reject(error)\r\n  );\r\n}\r\n\r\nsetMobileInterceptorsSECONDtest_To_Get_Objects(instanceSECONDtest_To_Get_Objects)\r\n","import {mainRequest} from '../api/api';\r\n\r\nexport const onClickSearchObjectsHandler = (location: string) => {\r\n  return mainRequest.getObjectCoordinates(location)\r\n    .then(res => {\r\n        const pos = res.data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos\r\n        const coordinats = pos.split(' ').reverse()\r\n        return coordinats\r\n      }\r\n    ).catch(err => {\r\n    })\r\n}\r\n\r\nexport const onClickShowNearbyObjectsHeddler = (objectType: string, location: string, streetName: string, objectCount: number) => {\r\n  return mainRequest.getDesplayObjects(objectType, location, streetName, objectCount)\r\n    .then(res => {\r\n        const features = res.data.features\r\n        return features\r\n      }\r\n    ).catch(err => {\r\n    })\r\n}","export default __webpack_public_path__ + \"static/media/cut-map-marker-final.80322ebe.jpg\";","import React, {ChangeEvent, useState} from 'react';\r\nimport './App.css';\r\nimport {Map, RulerControl, TypeSelector, YMaps, ZoomControl, Placemark} from 'react-yandex-maps';\r\nimport {onClickSearchObjectsHandler, onClickShowNearbyObjectsHeddler} from './hendlers/apiHendler';\r\nimport {v1} from 'uuid';\r\nimport pointer from '../src/assets/cut-map-marker-final.jpg'\r\n\r\ntype ItMinskSchoolType = {\r\n  schoolDescription: string,\r\n  id: string,\r\n  schoolName: string,\r\n  newSchoolLatitude: any,\r\n  newSchoolLongitude: any\r\n}\r\n\r\ntype displaySearchObjectType = {\r\n  description: string,\r\n  id: string,\r\n  schoolName: string,\r\n  newSchoolLatitude: any,\r\n  newSchoolLongitude: any\r\n  phone: any\r\n}\r\n\r\nfunction App() {\r\n\r\n  const TESTitMinskSchools: Array<ItMinskSchoolType> = [];\r\n  const StartDisplaySearchObjects: Array<ItMinskSchoolType> = [];\r\n\r\n  const [schoolName, setSchoolName] = useState<string>('');\r\n  const [schoolDescription, setSchoolDescription] = useState<string>('');\r\n  const [newSchoolLatitude, setNewSchoolLatitude] = useState<any>(0);\r\n  const [newSchoolLongitude, setNewSchoolLongitude] = useState<any>(0);\r\n  const [itMinskSchools, setItMinskSchools] = useState<Array<ItMinskSchoolType>>(TESTitMinskSchools);\r\n\r\n  const [searchObjectLocation, setSearchObjectLocation] = useState<string>('');\r\n  const [searchObjectType, setSearchObjectType] = useState<string>('');\r\n  const [streetName, setStreetName] = useState<string>('');\r\n  const [searchObjectCount, setSearchObjectCount] = useState<number>(1);\r\n  const [displaySearchObjects, setDisplaySearchObjects] = useState<Array<any>>(StartDisplaySearchObjects);\r\n\r\n\r\n  const [searchObjectLatitude, setSearchObjectLatitude] = useState<number>(50.5000);\r\n  const [searchObjectLongitude, setSearchObjectLongitude] = useState<number>(30.5000);\r\n\r\n  const onChangeSchoolNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSchoolName(e.currentTarget.value);\r\n  }\r\n\r\n  const onChangeDescriptionHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.value.length > 20) {\r\n      console.log('Value is more')\r\n    }\r\n    setSchoolDescription(e.currentTarget.value)\r\n  }\r\n\r\n  const onChangeNewSchoolLatitudeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const reg = /[^\\d\\.]/g\r\n    setNewSchoolLatitude(e.currentTarget.value.replace(reg, ''))\r\n  }\r\n\r\n  const onChangeNewSchoolLongitudeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const reg = /[^\\d\\.]/g\r\n    setNewSchoolLongitude(e.currentTarget.value.replace(reg, ''))\r\n  }\r\n\r\n  const onClickAddSchoolButtonHandler = () => {\r\n    addNewItSchoolMinsk(schoolDescription, schoolName);\r\n    setSearchObjectLatitude(newSchoolLatitude);\r\n    setSearchObjectLongitude(newSchoolLongitude);\r\n  }\r\n\r\n  const addNewItSchoolMinsk = (schoolDescription: string, schoolName: string) => {\r\n    const newItSchoolMinsk = {\r\n      id: v1(),\r\n      schoolName,\r\n      schoolDescription,\r\n      newSchoolLatitude,\r\n      newSchoolLongitude\r\n    };\r\n    setItMinskSchools([...itMinskSchools, newItSchoolMinsk]);\r\n  }\r\n\r\n  const onChangeLocationNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchObjectLocation(e.currentTarget.value);\r\n  }\r\n\r\n  const onClickSearchLocationButtonHeddler = () => {\r\n    onClickSearchObjectsHandler(searchObjectLocation).then((coordinates: Array<string>) => {\r\n      if (coordinates.length) {\r\n        setSearchObjectLatitude(Number(coordinates[0]));\r\n        setSearchObjectLongitude(+coordinates[1]);\r\n      }\r\n    })\r\n  }\r\n\r\n  const onChangeSearchObjectTypeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchObjectType(e.currentTarget.value);\r\n  }\r\n\r\n  const onChangeSearchObjectCountHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchObjectCount(Math.round(+e.currentTarget.value));\r\n  }\r\n\r\n  const onChangeStreetNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStreetName(e.currentTarget.value);\r\n  }\r\n\r\n  const onClickShowNearbyObjectsButtonHeddler = () => {\r\n    onClickShowNearbyObjectsHeddler(searchObjectType, searchObjectLocation, streetName, searchObjectCount ).then((foundObjects: any[]) => {\r\n      if (foundObjects.length) {\r\n        let shownObjects: Array<displaySearchObjectType> = new Array();\r\n        for (let i=0; i< foundObjects.length; i++){\r\n          shownObjects[i] = {\r\n            description : foundObjects[i].properties.description ,\r\n            id: v1(),\r\n            schoolName: foundObjects[i].properties.name,\r\n            newSchoolLatitude: foundObjects[i].geometry.coordinates[1],\r\n            newSchoolLongitude: foundObjects[i].geometry.coordinates[0],\r\n            phone: 777654\r\n          }\r\n        }\r\n        setDisplaySearchObjects(shownObjects);\r\n      }\r\n    })\r\n  }\r\n\r\n  const getMapCoordinates = (e: any) => {\r\n    let coordinatesSchool = e.get('coords');\r\n    setNewSchoolLatitude(+coordinatesSchool[0]);\r\n    setNewSchoolLongitude(+coordinatesSchool[1]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={'searchAddNavigation'}>\r\n        <div className={'addObject'}>\r\n          <div>Добавить школу</div>\r\n          <div>\r\n            <input type={'text'} name={'schoolName'} value={schoolName} placeholder={'Название школы'}\r\n                   onChange={onChangeSchoolNameHandler}/>\r\n          </div>\r\n          <div>\r\n            <input type={'text'} name={'schoolDescription'} value={schoolDescription} placeholder={'Описание'}\r\n                   onChange={onChangeDescriptionHandler}/>\r\n          </div>\r\n          <div>\r\n            <div>Координаты</div>\r\n            <input type={'text'} value={newSchoolLatitude} placeholder={'Широта'}\r\n                   onChange={onChangeNewSchoolLatitudeHandler}/>\r\n            <input type={'text'} value={newSchoolLongitude} placeholder={'Долгота'}\r\n                   onChange={onChangeNewSchoolLongitudeHandler}/>\r\n          </div>\r\n          <input type={'button'} name={'addNewItSchoolMinsk'} value={'Добавить на карту'}\r\n                 onClick={onClickAddSchoolButtonHandler}/>\r\n        </div>\r\n        <div className={'searchObject'}>\r\n          <div>Найти объект(ы)</div>\r\n          <div>\r\n            <input type={'text'} name={'locationName'} value={searchObjectLocation} placeholder={'Локация'}\r\n                   onChange={onChangeLocationNameHandler}/>\r\n            <input type={'button'} name={'searchLocation'} value={'Показать локацию на карте'}\r\n                   onClick={onClickSearchLocationButtonHeddler}/>\r\n          </div>\r\n          <div>\r\n            <div>Уточнение поиска</div>\r\n            <input type={'text'} name={'searchObjectType'} value={searchObjectType} placeholder={'Тип объекта'}\r\n                   onChange={onChangeSearchObjectTypeHandler}/>\r\n            <input type={'text'} value={streetName} name={'streatName'} placeholder={'Название улицы'}\r\n                   onChange={onChangeStreetNameHandler}/>\r\n            <input type={'number'} name={'objectCount'} value={searchObjectCount} min=\"1\" max=\"20\"\r\n                   placeholder={\"мах кол-во\"} onChange={onChangeSearchObjectCountHandler}/>\r\n          </div>\r\n          <input type={'button'} name={'showNearbyObjects'} value={'Показать объект(ы) на карте'}\r\n                 onClick={onClickShowNearbyObjectsButtonHeddler}/>\r\n        </div>\r\n      </div>\r\n      <div className={'mapArea'}>\r\n        <YMaps>\r\n          <div>\r\n            <Map className={'map'}\r\n                 onClick={(e: any) => {\r\n                   getMapCoordinates(e)\r\n                 }}\r\n                 state={{center: [searchObjectLatitude, searchObjectLongitude], zoom: 10}}>\r\n              <ZoomControl options={{position: {right: 10, top: 10}}}/>\r\n              <TypeSelector options={{position: {left: 10, top: 10}}}/>\r\n              <RulerControl options={{position: {right: 50, top: 10}}}/>\r\n              {displaySearchObjects.map((displaySearchObject: displaySearchObjectType) => <Placemark\r\n                  geometry={[displaySearchObject.newSchoolLatitude, displaySearchObject.newSchoolLongitude]}\r\n                  modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n                  properties={{\r\n                    hintContent: displaySearchObject.schoolName,\r\n                    balloonContent: displaySearchObject.description,\r\n                  }}\r\n                  options={{\r\n                    iconLayout: 'default#image',\r\n                    iconImageHref: pointer,\r\n                    iconImageSize: [40, 50],\r\n                    iconImageOffset: [-20, -55],\r\n                  }}\r\n                />\r\n              )}\r\n              {itMinskSchools.map((itMinskSchool: ItMinskSchoolType) => <Placemark\r\n                  geometry={[itMinskSchool.newSchoolLatitude, itMinskSchool.newSchoolLongitude]}\r\n                  modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n                  properties={{\r\n                    hintContent: itMinskSchool.schoolName,\r\n                    balloonContent: itMinskSchool.schoolDescription,\r\n                  }}\r\n                  options={{\r\n                    iconLayout: 'default#image',\r\n                    iconImageHref: 'https://image.freepik.com/free-vector/3d-gps-red-color-icon-dropping-on-street-map-on-white_175838-446.jpg',\r\n                    iconImageSize: [80, 60],\r\n                    iconImageOffset: [-40, -30],\r\n                  }}\r\n                />\r\n              )}\r\n            </Map>\r\n          </div>\r\n        </YMaps>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import injectTapEventPlugin from 'react-tap-event-plugin';\r\n//import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\n//injectTapEventPlugin()\r\n\r\nReactDOM.render(\r\n   // <MuiThemeProvider>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n    //</MuiThemeProvider>\r\n        , document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}